# 프론트 컨테이너 내부에서만 쓰는 vhost (정적 파일 서빙 전용)
server {
  listen 80;
  server_name _;  # 내부에서만 사용하므로 와일드카드로 충분
  root /usr/share/nginx/html;
  index index.html;

  # 헤더/성능 튜닝
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;

  # 업로드가 필요 없으면 더 줄여도 됨
  client_max_body_size 25m;

  # 압축 (alpine 기본 nginx에는 brotli 모듈이 없으니 gzip만)
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_types
    text/plain
    text/css
    application/json
    application/javascript
    application/xml
    image/svg+xml
    font/ttf
    font/otf
    application/font-woff
    application/font-woff2;

  # 헬스체크
  location = /healthz {
    add_header Content-Type text/plain;
    return 200 'ok';
  }

  # 해시된 정적 리소스는 강한 캐시
  location ~* ^/_next/static/ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # 일반 정적 자원 캐시
  location ~* \.(?:js|mjs|css|png|jpg|jpeg|gif|svg|ico|webp|avif|ttf|otf|woff|woff2)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # 루트 경로 및 페이지 라우팅
  # Next export는 미리 렌더된 경로만 존재. 그 외는 index.html로 폴백(SPA형 라우팅 시)
  location / {
    try_files $uri $uri/ /index.html;
    # SSR이 전혀 없다면 위 폴백이 UX상 자연스러움. 필요 없으면 /index.html 폴백을 제거해도 됨.
  }

  # 보안 헤더(필요 시 조정)
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header Referrer-Policy strict-origin-when-cross-origin always;
  # 간단한 CSP 템플릿 (프로젝트에 맞춰 조정 가능)
  # add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https:;" always;

  # 에러 페이지 (Next export 시 404.html이 있으면 활용)
  error_page 404 /404.html;
  location = /404.html {
    internal;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    internal;
  }
}
