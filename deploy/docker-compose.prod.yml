services:
  mysql_prod:
    image: mysql:8.0
    container_name: mysql_prod
    command: [
      "--max-connections=200",
      "--innodb-buffer-pool-size=256M",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--default-time-zone=+00:00"
    ]
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: tcg
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_prod_data:/var/lib/mysql
    mem_limit: 1536m
    memswap_limit: 1536m
    cpus: "1.0"
    restart: unless-stopped
    networks:
      - e104_net

  redis_prod:
    image: redis:8.0
    container_name: redis_prod
    command: ["redis-server","--maxmemory","128mb","--maxmemory-policy","volatile-lru"]
    expose:
      - "6379"
    volumes:
      - redis_prod_data:/data
    mem_limit: 256m
    memswap_limit: 256m
    cpus: "0.2"
    restart: unless-stopped
    networks:
      - e104_net

  tako_back:
    build:
      context: ../backend-spring
      dockerfile: Dockerfile
    container_name: tako_back
    expose:
      - "8080"
    env_file:
      - .env.prod
    mem_limit: 1536m
    memswap_limit: 1536m
    cpus: "1.2"
    depends_on:
      - mysql_prod
      - redis_prod
    restart: unless-stopped
    networks:
      - e104_net

  tako_front:
    # image: seok1419/tetonam-frontend:latest
    build:
      context: ../frontend-web/taako
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_TAKO_NFT: ${NEXT_PUBLIC_TAKO_NFT}
        NEXT_PUBLIC_SPENDER_ADDRESS: ${NEXT_PUBLIC_SPENDER_ADDRESS}
        APP_STAGE: "prod"
    container_name: tako_front
    expose:
      - "3000"
    env_file:
      - .env.prod
    mem_limit: 512m
    memswap_limit: 512m
    cpus: "0.2"
    restart: unless-stopped
    networks:
      - e104_net

networks:
  e104_net:
    external: true

volumes:
  mysql_prod_data:
    external: true
  redis_prod_data:
    external: true
