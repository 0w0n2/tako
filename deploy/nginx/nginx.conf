# ================================
# Nginx Reverse Proxy 설정
# - Prod/Dev 환경 분리
# - Frontend/Backend/AI 서버 라우팅
# - SSL 인증서: Let's Encrypt (Certbot)
# ================================

user  nginx;
worker_processes  auto;

events { worker_connections  1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # 기본 최적화 옵션
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  client_max_body_size 50m;

  # gzip 압축
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml text/javascript image/svg+xml;

  # WebSocket 업그레이드 지원
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # 내부 업스트림
  upstream tako_front_dev { server tako_front_dev:3000; }
  # upstream tako_front { server tako_front:3000; }
  upstream tako_back_dev  { server tako_back_dev:8080; }
  # upstream tako_back  { server tako_back:8080; }
  upstream tako_ai  { server tako_ai:8000; }
  upstream jenkins  { server jenkins:8080; }

  # ------------------------------
  # HTTP → HTTPS 리다이렉트
  # ACME Challenge (Certbot) 지원
  # ------------------------------
  server {
    listen 80;
    listen [::]:80;

    # 인증서 발급을 위한 경로 (DNS-01이더라도 fallback으로 둠)
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      try_files $uri =404;
    }

    # HTTP로 들어온 모든 요청은 HTTPS로 리다이렉트
    server_name tako.today api.tako.today dev.tako.today dev-api.tako.today j13e104.p.ssafy.io;
    return 301 https://$host$request_uri;
  }

  # 443으로 들어온 j13e104.p.ssafy.io는 항상 tako.today로 영구 리다이렉트
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name j13e104.p.ssafy.io;

    # 이 도메인 인증서가 있어야 함 (위 certbot에서 함께 발급)
    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;

    return 301 https://tako.today$request_uri;
  }

  # =================================================
  # PROD Frontend (https://tako.today)
  #   - next 프론트엔드 컨테이너: tako_front:3000
  # =================================================
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

  #   # 프론트엔드 라우팅
  #   location / {
  #     proxy_pass http://tako_front;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #   }
    location /ai/ {
      proxy_pass http://tako_ai/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # =================================================
  # PROD Backend (https://api.tako.today)
  #   - Spring Boot 백엔드 컨테이너: tako_back:8080
  # =================================================
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name api.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

  #   location / {
  #     proxy_pass http://tako_back;
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Real-IP $remote_addr;
  #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #   }
  }

  # =================================================
  # DEV Frontend (https://dev.tako.today)
  #   - next 프론트엔드 컨테이너: tako_front_dev:3000
  # =================================================
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name dev.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # 프론트엔드 라우팅
    location / {
      proxy_pass http://tako_front_dev;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass_header Set-Cookie;

      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_buffering off;
      proxy_cache off;
      proxy_read_timeout 1h;
      add_header X-Accel-Buffering no;
    }
    
    location /ai/ {
      proxy_pass http://tako_ai/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # =================================================
  # DEV Backend (https://dev-api.tako.today)
  #   - Spring Boot 백엔드 컨테이너: tako_back_dev:8080
  # =================================================
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name dev-api.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location / {
      proxy_pass http://tako_back_dev;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass_header Set-Cookie;

      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_cache off;
      proxy_read_timeout 1h;
      add_header X-Accel-Buffering no;
    }
  }

  # =================================================
  # Jenkins (https://jenkins.tako.today)
  #   - Jenkins 컨테이너: jenkins:8080
  # =================================================
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name jenkins.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    proxy_buffering off;

    location / {
      proxy_pass http://jenkins;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }
}