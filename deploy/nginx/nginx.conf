user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  client_max_body_size 50m;

  # gzip
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss application/xml text/javascript image/svg+xml;

  # WebSocket map
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # 공통 업스트림
  include /etc/nginx/conf.d/upstreams.conf;

  # -------------------------
  # 80 → 443 리다이렉트 + ACME
  # -------------------------
  server {
    listen 80;
    listen [::]:80;
    server_name tako.today api.tako.today dev.tako.today dev-api.tako.today j13e104.p.ssafy.io;

    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      try_files $uri =404;
    }

    return 301 https://$host$request_uri;
  }

  # j13e104.p.ssafy.io → tako.today 영구 리다이렉트
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name j13e104.p.ssafy.io;

    # 인증서 경로(이 부분만 서버별로 유지)
    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;

    include /etc/nginx/snippets/ssl_common.conf;

    return 301 https://tako.today$request_uri;
  }

  # =======================
  # PROD Frontend (tako.today)
  # =======================
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;
    include /etc/nginx/snippets/ssl_common.conf;

    # React SPA라면(선택): 정적 파일 404시 index.html로 fallback
    # location / {
    #   try_files $uri $uri/ /index.html;
    #   proxy_pass http://tako_front_prod;  # 정적 Nginx가 아닌 프록시라면 유지
    #   include /etc/nginx/snippets/proxy_common.conf;
    # }

    location / {
      proxy_pass http://tako_front_prod;
      include /etc/nginx/snippets/proxy_common.conf;
    }

    # /ai/ → FastAPI (경로 스트립 권장)
    location /ai/ {
      # /ai/ 접두어 제거해서 백엔드에 전달
      rewrite ^/ai/(.*)$ /$1 break;
      proxy_pass http://tako_ai_prod;
      include /etc/nginx/snippets/proxy_common.conf;
    }
  }

  # =======================
  # PROD Backend (api.tako.today)
  # =======================
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;
    include /etc/nginx/snippets/ssl_common.conf;

    location / {
      proxy_pass http://tako_back_prod;
      include /etc/nginx/snippets/proxy_common.conf;
    }
  }

  # =======================
  # DEV Frontend (dev.tako.today)
  # =======================
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dev.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;
    include /etc/nginx/snippets/ssl_common.conf;

    location / {
      proxy_pass http://tako_front_dev;
      include /etc/nginx/snippets/proxy_common.conf;
    }

    location /ai/ {
      rewrite ^/ai/(.*)$ /$1 break;
      proxy_pass http://tako_ai_dev;
      include /etc/nginx/snippets/proxy_common.conf;
    }
  }

  # =======================
  # DEV Backend (dev-api.tako.today)
  # =======================
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dev-api.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;
    include /etc/nginx/snippets/ssl_common.conf;

    location / {
      proxy_pass http://tako_back_dev;
      include /etc/nginx/snippets/proxy_common.conf;
    }
  }

  # =======================
  # Jenkins (jenkins.tako.today)
  # =======================
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name jenkins.tako.today;

    ssl_certificate     /etc/letsencrypt/live/tako.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tako.today/privkey.pem;
    include /etc/nginx/snippets/ssl_common.conf;

    location / {
      proxy_pass http://jenkins_up;
      include /etc/nginx/snippets/proxy_common.conf;

      # Jenkins 권장 옵션
      proxy_redirect off;
      proxy_read_timeout 600;
      proxy_buffering off;
    }
  }
}
