server:
  port: ${SERVER_PORT}
  tomcat:
    max-swallow-size: -1 # 남은 바디를 끝까지 삼켜서 응답을 바로 보냄

swagger:
  uri: ${SWAGGER_URI}

springdoc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter: alpha

spring:
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: "${REDIS_PASSWORD}"

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: "${DB_PASSWORD}"
    driver-class-name: ${DB_DRIVER}

  jpa:
    hibernate:
      ddl-auto: ${JPA_HIBERNATE_DDL}
    show-sql: ${JPA_SHOW_SQL}
    properties:
      hibernate:
        format_sql: ${JPA_FORMAT_SQL}

  batch:
    job:
      enabled: ${BATCH_JOB_ENABLED}
    jdbc:
      initialize-schema: ${BATCH_JDBC_SCHEMA}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            scope:
              - email
            redirect-uri: "${OAUTH2_REDIRECT_URI}"
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ${AWS_REGION_STATIC}
      s3:
        bucket: ${AWS_S3_BUCKET}
  servlet:
    multipart:
      max-file-size: 50MB # 전체 타입 중 가장 큰 per-file 상한
      max-request-size: 50MB # 전체 타입 중 가장 큰 per-request 상한
      resolve-lazily: true

security:
  jwt:
    secret-key: ${SECURITY_JWT_SECRET_KEY}
    expire-time:
      access-token: ${SECURITY_JWT_EXPIRE_TIME_ACCESS}
      refresh-token: ${SECURITY_JWT_EXPIRE_TIME_REFRESH}

  whitelist:
    GET: ${SECURITY_WHITELIST_GET},${SECURITY_WHITELIST_GET_SWAGGER},${SECURITY_WHITELIST_GET_AUTH},${SECURITY_WHITELIST_GET_OAUTH},${SECURITY_WHITELIST_GET_NOTICE},${SECURITY_WHITELIST_GET_CATEGORY},${SECURITY_WHITELIST_GET_CARD},${SECURITY_WHITELIST_GET_AUCTION},${SECURITY_WHITELIST_GET_MEMBER},${SECURITY_WHITELIST_GET_GAME},${SECURITY_WHITELIST_GET_POPULARITY},${SECURITY_WHITELIST_GET_INQUIRY}
    POST: ${SECURITY_WHITELIST_POST},${SECURITY_WHITELIST_POST_AUTH}
    PUT: ${SECURITY_WHITELIST_PUT}
    DELETE: ${SECURITY_WHITELIST_DELETE}
    PATCH: ${SECURITY_WHITELIST_PATCH},${SECURITY_WHITELIST_PATCH_AUTH}
    OPTIONS: ${SECURITY_WHITELIST_OPTION}

  cors:
    allowed-origins: ${SECURITY_CORS_ALLOWED_ORIGINS}
    allowed-methods: ${SECURITY_CORS_ALLOWED_METHODS}
    allowed-headers: ${SECURITY_CORS_ALLOWED_HEADERS}
    allow-credentials: ${SECURITY_CORS_ALLOW_CREDENTIALS}
    exposed-headers: ${SECURITY_CORS_EXPOSED_HEADERS}
    max-age: ${SECURITY_CORS_MAX_AGE}

  role:
    admin: ${SECURITY_ROLE_ADMIN}

  oauth2:
    authorize-uri: ${SECURITY_OAUTH2_AUTHORIZE_URI}
    redirect-uri: ${SECURITY_OAUTH2_REDIRECT_URI}
    client-redirect-uri: ${SECURITY_OAUTH2_CLIENT_REDIRECT_URI}

# expire-time: # 나중에 만료 시간 등 설정할 때 사용할 것
# 인기도 관련 설정
popularity:
  weight:
    view: ${POPULARITY_WEIGHT_VIEW:1} # 조회 가중치 (double). 미설정 시 기본 1
    bid: ${POPULARITY_WEIGHT_BID:5} # 입찰 가중치 (double). 미설정 시 기본 5
  bucket:
    ttl-minutes: ${POPULARITY_BUCKET_TTL_MINUTES:70} # 분 버킷 TTL. 기본 70분(60분 + 버퍼)

logging:
  level:
    com.bukadong.tcg.api.media.service.MediaUrlService: DEBUG
    com.bukadong.tcg.api.inquiry.service.InquiryQueryService: DEBUG
    com.bukadong.tcg.api.inquiry.service.InquiryCommandService: DEBUG
    com.bukadong.tcg.api.inquiry.controller.InquiryController: DEBUG
    com.bukadong.tcg.api.inquiry.controller.MyInquiryController: DEBUG
    com.bukadong.tcg.global.util.RedisUtils: DEBUG
    com.bukadong.tcg.global.util.S3Uploader: DEBUG
    com.bukadong.tcg.api.media.guard.MediaUploadGuard: DEBUG
    org.springframework.data.redis: INFO
    io.lettuce.core: INFO

app:
  upload:
    limits:
      MEMBER_PROFILE:
        per-file: 2MB
        per-request: 5MB
        max-count: 1
        allowed-mimes: [image/jpeg, image/png, image/webp]
        allowed-exts: [jpg, jpeg, png, webp]
        image:
          square: true
          min-width: 256
          min-height: 256
          max-width: 2048
          max-height: 2048

      AUCTION_ITEM:
        per-file: 8MB
        per-request: 30MB
        max-count: 10
        allowed-mimes: [image/jpeg, image/png, image/webp, video/mp4]
        allowed-exts: [jpg, jpeg, png, webp, mp4]
        # 이미지 규격 제한이 필요 없으면 image 블록 생략 가능

      CARD:
        per-file: 5MB
        per-request: 30MB
        max-count: 10
        allowed-mimes: [image/jpeg, image/png, image/webp]
        allowed-exts: [jpg, jpeg, png, webp]

      CATEGORY_MAJOR:
        per-file: 2MB
        per-request: 6MB
        max-count: 1
        allowed-mimes: [image/jpeg, image/png, image/webp]
        allowed-exts: [jpg, jpeg, png, webp]

      CATEGORY_MEDIUM:
        per-file: 2MB
        per-request: 6MB
        max-count: 1
        allowed-mimes: [image/jpeg, image/png, image/webp]
        allowed-exts: [jpg, jpeg, png, webp]

      AUCTION_AI:
        per-file: 8MB
        per-request: 30MB
        max-count: 10
        allowed-mimes: [image/jpeg, image/png, image/webp]
        allowed-exts: [jpg, jpeg, png, webp]

      AUCTION_REVIEW:
        per-file: 8MB
        per-request: 30MB
        max-count: 10
        allowed-mimes: [image/jpeg, image/png, image/webp, video/mp4]
        allowed-exts: [jpg, jpeg, png, webp, mp4]

      NOTICE:
        per-file: 5MB
        per-request: 20MB
        max-count: 3
        allowed-mimes: [image/jpeg, image/png, image/webp]
        allowed-exts: [jpg, jpeg, png, webp]

      NOTICE_ATTACHMENT:
        per-file: 10MB
        per-request: 40MB
        max-count: 5
        allowed-mimes: [image/jpeg, image/png, image/webp, application/pdf, application/zip, application/x-zip-compressed]
        allowed-exts: [jpg, jpeg, png, webp, pdf, zip]

      INQUIRY:
        per-file: 5MB
        per-request: 20MB
        max-count: 3
        allowed-mimes: [image/jpeg, image/png, image/webp]
        allowed-exts: [jpg, jpeg, png, webp]
