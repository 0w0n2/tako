{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xb51801BEcb46D15641a6861e2092017128D1453e",
      "txHash": "0x972db87b4582a4092a0e98b7f6b69b7f70dca9b02d0c32ac57de98b8ec72b3ae",
      "kind": "transparent"
    },
    {
      "address": "0x82b0E2c6c6a41155E6Fd4007c8bE0F725fb60d3A",
      "txHash": "0x86a13ab7184e9bbedc267941d4e144412019ef370fabf83855f8c648e20e1cac",
      "kind": "transparent"
    },
    {
      "address": "0xaeDDC78AcEEcB232080E498E2562ecbA1411681A",
      "txHash": "0x329383e2ce3df00e71a7a241ecf205c7182d46673cbd86ea4f54aad723845484",
      "kind": "uups"
    },
    {
      "address": "0xCf433334a3Cc8d0D868158205Ff825110E0F07C4",
      "txHash": "0x95df41f5919dccce01ff1215cab61674b52d98d59db4258b375c52d83123a9a5",
      "kind": "uups"
    },
    {
      "address": "0xCD64DF1b4222A8ad082053E51F43055e44171E51",
      "txHash": "0x8ea3f588d90de14f13f28371dfb9cf496061a3cd9b561f031b2a06263ef321d1",
      "kind": "uups"
    },
    {
      "address": "0xd6041a1E02d1bFE0F1b67330eC9c76735EE72E27",
      "txHash": "0xc4ccb317d2b45b27639ac3a4d51f4ec9999a7a25f4c080d611a03fdb81b694cd",
      "kind": "uups"
    }
  ],
  "impls": {
    "543ff9258404162677ba13fe6f9ce45786c42c656fb4438f259acc707e4eef09": {
      "address": "0xF450BB30196390AFe174eD822Da6E0Df95646Fb3",
      "txHash": "0x9f4dc620aecb98fac81e165d4ab882ad1f1fae6245b8ca047555f6a9f71198ee",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AuctionEscrow",
            "src": "contracts\\AuctionEscrow.sol:23"
          },
          {
            "label": "buyer",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "AuctionEscrow",
            "src": "contracts\\AuctionEscrow.sol:24"
          },
          {
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "AuctionEscrow",
            "src": "contracts\\AuctionEscrow.sol:25"
          },
          {
            "label": "currentState",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(State)284",
            "contract": "AuctionEscrow",
            "src": "contracts\\AuctionEscrow.sol:37"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)7_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_enum(State)284": {
            "label": "enum AuctionEscrow.State",
            "members": [
              "AwaitingPayment",
              "AwaitingConfirmation",
              "Complete",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2e0391f90bff32042479a7823e4dbe40a313165a7722cc16723cca8d870f79ba": {
      "address": "0xadFe4b237E8a06674a898D1100526A8c9405D565",
      "txHash": "0x90d856612e911e3d3bd8f3c66963bb4847f8f189c304fb4ad904fedc8e850af2",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "implementation",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AuctionFactory",
            "src": "contracts\\AuctionFactory.sol:14"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AuctionFactory",
            "src": "contracts\\AuctionFactory.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7e1988a47d3a65d9032fa8a6570b05f98df7b3e323968f3105fa19714ed799d1": {
      "address": "0xC19a661Cc50F5b512ddce8Cb1D484c52da7c7315",
      "txHash": "0x94a4982123c6cb716462284baf8ea44b15e27048470bde47c4a02eca5ca75e25",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "implementation",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AuctionFactory",
            "src": "contracts\\AuctionFactory.sol:11"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AuctionFactory",
            "src": "contracts\\AuctionFactory.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3bda9dd458b6ba82ce625eff4932390f95f5af6cde0263cb5b52f7a1b467eddb": {
      "address": "0xac0D2eDf03B3BC163c031ff8f63dB1a2881a5dd6",
      "txHash": "0x5660dad3e9d1fb178e6e0fe1872b8c97bf22672ec558de55244e15d57c4864c1",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "auctionHistories",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_array(t_struct(AuctionHistory)9021_storage)dyn_storage)",
            "contract": "TakoCardNFT",
            "src": "contracts\\TakoCardNFT.sol:26"
          },
          {
            "label": "backendAdmin",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "TakoCardNFT",
            "src": "contracts\\TakoCardNFT.sol:28"
          },
          {
            "label": "tokenSecrets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "TakoCardNFT",
            "src": "contracts\\TakoCardNFT.sol:36"
          },
          {
            "label": "usedSecrets",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "TakoCardNFT",
            "src": "contracts\\TakoCardNFT.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)240_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(AuctionHistory)9021_storage)dyn_storage": {
            "label": "struct TakoCardNFT.AuctionHistory[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(AuctionHistory)9021_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct TakoCardNFT.AuctionHistory[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionHistory)9021_storage": {
            "label": "struct TakoCardNFT.AuctionHistory",
            "members": [
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "buyer",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "gradeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
